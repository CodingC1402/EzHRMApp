<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:CornControls.CustomControl">

    <Style x:Key="{x:Type controls:DatePickerEx}" TargetType="{x:Type controls:DatePickerEx}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="FontFamily" Value="Time New Roman" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="IconPad" Value="0" />
        <Setter Property="IconSize" Value="24" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />

        <Setter Property="ButtonNormalBrush" Value="{DynamicResource Accent}" />
        <Setter Property="ButtonHoverBrush" Value="{DynamicResource AccentDark}" />
        <Setter Property="ButtonPressedBrush" Value="{DynamicResource AccentReallyDark}" />

        <Setter Property="CalendarIconBrush" Value="{DynamicResource LightForeground}" />
        <Setter Property="CalendarIconWidth" Value="30" />
        <Setter Property="CalendarIconPath" Value="{DynamicResource calendarIconSM}" />
        <Setter Property="CalendarIconSize" Value="15" />

        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Background" Value="{DynamicResource BackColor}" />
        <Setter Property="FocusedColor" Value="{DynamicResource BackColor}" />
        <Setter Property="HoverColor" Value="{DynamicResource DarkerBackColor}" />

        <Setter Property="FocusedOutterColor" Value="{DynamicResource Accent}" />
        <Setter Property="OutterColor" Value="{DynamicResource DarkestBackColor}" />

        <Setter Property="ReadOnlyBackground" Value="{DynamicResource DarkerBackColor}" />
        <Setter Property="NormalPadding" Value="5, 1, 5, 1" />
        <Setter Property="FocusedPadding" Value="5, 1, 5, 1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="FocusedOutterColor" Value="{DynamicResource Accent}" />
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:DatePickerEx">
                    <Border CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OutterColor}" />
                                <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NormalPadding}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=contentTextBox, Path=IsFocused}" Value="True">
                                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedOutterColor}" />
                                        <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedPadding}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Border x:Name="bordder" CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius}">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="True">
                                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverColor}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=contentTextBox, Path=IsFocused}" Value="True">
                                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FocusedColor}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEnabled}" Value="False">
                                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ReadOnlyBackground}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid
                                Width="Auto"
                                Height="Auto"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                                <Grid.Resources>
                                    <Style TargetType="controls:ButtonEx" />
                                </Grid.Resources>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{TemplateBinding IconPad}" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="{TemplateBinding CalendarIconWidth}" />
                                </Grid.ColumnDefinitions>

                                <controls:ButtonEx
                                    x:Name="PART_calendarButton"
                                    Grid.Column="3"
                                    Margin="-2,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Background="{TemplateBinding ButtonNormalBrush}"
                                    Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=OpenCalendar}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    DisabledColor="{TemplateBinding OutterColor}"
                                    Focusable="False"
                                    Foreground="{TemplateBinding CalendarIconBrush}"
                                    HoverColor="{TemplateBinding ButtonHoverBrush}"
                                    IconPad="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Width}"
                                    IconSize="{TemplateBinding CalendarIconSize}"
                                    Path="{TemplateBinding CalendarIconPath}"
                                    PressedColor="{TemplateBinding ButtonPressedBrush}" />

                                <Popup x:Name="PART_popup">
                                    <Calendar
                                        x:Name="PART_calendar"
                                        Margin="0,-5"
                                        BorderThickness="0"
                                        SelectedDate="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </Popup>

                                <Path
                                    Width="{TemplateBinding IconSize}"
                                    Height="{TemplateBinding IconSize}"
                                    Data="{TemplateBinding Path}"
                                    Fill="{TemplateBinding Foreground}"
                                    RenderTransformOrigin="0.5, 0.5" />

                                <TextBox
                                    x:Name="contentTextBox"
                                    Grid.Column="1"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    HorizontalContentAlignment="Left"
                                    VerticalContentAlignment="Center"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontStretch="{TemplateBinding FontStretch}"
                                    FontStyle="{TemplateBinding FontStyle}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    IsReadOnly="True"
                                    SelectionTextBrush="{TemplateBinding SelectionTextBrush}"
                                    Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    TextAlignment="{TemplateBinding TextAlignment}" />
                            </Grid>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>