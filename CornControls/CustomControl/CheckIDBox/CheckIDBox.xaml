<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:CornControls.CustomControl"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/CornControls;component/Icons/HRMIcons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="FocusVisual1">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========================== Textbox ==========================  -->
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer
                        x:Name="PART_ContentHost"
                        Background="Transparent"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ========================== Button ==========================  -->
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=CornerRadius}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=OutterColor}" />
                                <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=NormalPadding}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=IsFocused}" Value="True">
                                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=FocusedOutterColor}" />
                                        <Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=FocusedPadding}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Border
                            x:Name="templateRoot"
                            Background="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=NormalColor}"
                            CornerRadius="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=CornerRadius}"
                            SnapsToDevicePixels="true">
                            <Border
                                x:Name="splitBorder"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                Margin="0"
                                HorizontalAlignment="Right"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                SnapsToDevicePixels="true">
                                <Path
                                    x:Name="arrow"
                                    Margin="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="{StaticResource arrowDownIcon}"
                                    Fill="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=IconColor}" />
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=IsEnabled}" Value="False">
                            <Setter TargetName="templateRoot" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=DisabledColor}" />
                            <Setter TargetName="arrow" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=IsReadOnly}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=IsEnabled}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=HoverColor}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=IsReadOnly}" Value="False" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=IsEnabled}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=IsFocused}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=HoverColor}" />
                            <Setter TargetName="arrow" Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=IconHoverColor}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=IsReadOnly}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=IsEnabled}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=ReadOnlyBackground}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=IsEnabled}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="arrow" Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=IconHoverColor}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  ========================== Editable combobox template (When editable == true) ==========================  -->
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type controls:CheckIDBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome
                    x:Name="shadow"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Color="{DynamicResource ColorAccent}">
                    <Border
                        x:Name="dropDownBorder"
                        Background="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=Background}"
                        BorderBrush="{DynamicResource Accent}"
                        BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        Width="*"
                                        MinWidth="100"
                                        MaxWidth="200" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30" />
                                    <RowDefinition Height="30" />
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Ellipse
                                    x:Name="profilePicture"
                                    Grid.RowSpan="4"
                                    Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
                                    Margin="10"
                                    RenderOptions.BitmapScalingMode="HighQuality"
                                    Stroke="{DynamicResource Accent}"
                                    StrokeThickness="10">
                                    <Ellipse.Fill>
                                        <ImageBrush ImageSource="{Binding ProfilePicture, RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}}" Stretch="Uniform" />
                                    </Ellipse.Fill>
                                </Ellipse>

                                <Label
                                    x:Name="idTextLabel"
                                    Grid.Column="2"
                                    VerticalAlignment="Center"
                                    Content="{Binding IDText, RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}}" />
                                <Label
                                    x:Name="nameTextLabel"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    VerticalAlignment="Center"
                                    Content="{Binding NameText, RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}}" />
                                <Label
                                    x:Name="roleTextLabel"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    VerticalAlignment="Center"
                                    Content="{Binding RoleText, RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}}" />

                                <Label
                                    x:Name="PART_idText"
                                    Grid.Column="1"
                                    Margin="10,0"
                                    VerticalAlignment="Center"
                                    Content="ID: " />
                                <Label
                                    x:Name="PART_nameText"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="10,0"
                                    VerticalAlignment="Center"
                                    Content="Name: " />
                                <Label
                                    x:Name="PART_roleText"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    Content="Role: " />

                                <Rectangle
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="2"
                                    Fill="{DynamicResource Accent}"
                                    RadiusX="5"
                                    RadiusY="5" />
                                <Rectangle
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="2"
                                    Fill="{DynamicResource Accent}"
                                    RadiusX="5"
                                    RadiusY="5" />

                                <Label
                                    x:Name="messageLabel"
                                    Grid.Row="3"
                                    Grid.ColumnSpan="3"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom"
                                    Content="{Binding MessageText, RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButton}" />
            <Border x:Name="border" Margin="{TemplateBinding BorderThickness}">
                <TextBox
                    x:Name="PART_EditableTextBox"
                    Margin="{TemplateBinding Padding}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxEditableTextBox}"
                    Text="{Binding ContentText, RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, UpdateSourceTrigger=PropertyChanged}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Opacity" Value="0.56" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                <Setter TargetName="shadow" Property="Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="IsMessageOnly" Value="true">
                <Setter TargetName="messageLabel" Property="Grid.Row" Value="0" />
                <Setter TargetName="messageLabel" Property="Grid.RowSpan" Value="3" />
                <Setter TargetName="messageLabel" Property="VerticalAlignment" Value="Center" />
                <Setter TargetName="profilePicture" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_idText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_nameText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_roleText" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="true">
                <Setter Property="OutterColor" Value="{DynamicResource Accent}" />
                <!--  need change something here  -->
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  ========================== Normal combobox template (When editable == false) ==========================  -->
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type controls:CheckIDBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                Margin="1"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome
                    x:Name="shadow"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Color="{DynamicResource ColorAccent}">
                    <Border
                        x:Name="dropDownBorder"
                        Background="{Binding RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}, Path=Background}"
                        BorderBrush="{DynamicResource Accent}"
                        BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        Width="*"
                                        MinWidth="100"
                                        MaxWidth="200" />
                                    <ColumnDefinition Width="100" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30" />
                                    <RowDefinition Height="30" />
                                    <RowDefinition Height="30" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Ellipse
                                    x:Name="profilePicture"
                                    Grid.RowSpan="4"
                                    Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
                                    Margin="10"
                                    RenderOptions.BitmapScalingMode="HighQuality"
                                    Stroke="{DynamicResource Accent}"
                                    StrokeThickness="10">
                                    <Ellipse.Fill>
                                        <ImageBrush ImageSource="{Binding ProfilePicture, RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}}" Stretch="Uniform" />
                                    </Ellipse.Fill>
                                </Ellipse>

                                <Label
                                    x:Name="idTextLabel"
                                    Grid.Column="2"
                                    VerticalAlignment="Center"
                                    Content="{Binding IDText, RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}}" />
                                <Label
                                    x:Name="nameTextLabel"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    VerticalAlignment="Center"
                                    Content="{Binding NameText, RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}}" />
                                <Label
                                    x:Name="roleTextLabel"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    VerticalAlignment="Center"
                                    Content="{Binding RoleText, RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}}" />

                                <Label
                                    x:Name="PART_idText"
                                    Grid.Column="1"
                                    Margin="10,0"
                                    VerticalAlignment="Center"
                                    Content="ID: " />
                                <Label
                                    x:Name="PART_nameText"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="10,0"
                                    VerticalAlignment="Center"
                                    Content="Name: " />
                                <Label
                                    x:Name="PART_roleText"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    Content="Role: " />

                                <Rectangle
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="2"
                                    Fill="{DynamicResource Accent}"
                                    RadiusX="5"
                                    RadiusY="5" />
                                <Rectangle
                                    Grid.Row="1"
                                    Grid.ColumnSpan="2"
                                    Fill="{DynamicResource Accent}"
                                    RadiusX="5"
                                    RadiusY="5" />

                                <Label
                                    x:Name="messageLabel"
                                    Grid.Row="3"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="3"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom"
                                    Content="{Binding MessageText, RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButton}" />
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{Binding ContentText, RelativeSource={RelativeSource AncestorType=controls:CheckIDBox}}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                IsHitTestVisible="false"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                <Setter TargetName="shadow" Property="Color" Value="#71000000" />
            </Trigger>
            <Trigger Property="IsMessageOnly" Value="true">
                <Setter TargetName="messageLabel" Property="Grid.Row" Value="0" />
                <Setter TargetName="messageLabel" Property="Grid.RowSpan" Value="3" />
                <Setter TargetName="messageLabel" Property="VerticalAlignment" Value="Center" />
                <Setter TargetName="profilePicture" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_idText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_nameText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_roleText" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--  ========================== ComboBox actual style ==========================  -->
    <Style x:Key="{x:Type controls:CheckIDBox}" TargetType="{x:Type controls:CheckIDBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />

        <Setter Property="Foreground" Value="{DynamicResource DarkForeground}" />
        <Setter Property="Background" Value="{DynamicResource BackColor}" />
        <Setter Property="HoverColor" Value="{DynamicResource DarkerBackColor}" />
        <Setter Property="FocusedColor" Value="{DynamicResource BackColor}" />
        <Setter Property="OutterColor" Value="{DynamicResource DarkestBackColor}" />
        <Setter Property="ReadOnlyBackground" Value="{DynamicResource DarkerBackColor}" />
        <Setter Property="NormalPadding" Value="0, 0, 0, 5" />
        <Setter Property="FocusedPadding" Value="0, 0, 0, 5" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="FocusedOutterColor" Value="{DynamicResource Accent}" />

        <Setter Property="Background" Value="{DynamicResource BackColor}" />
        <Setter Property="NormalColor" Value="{DynamicResource BackColor}" />
        <Setter Property="HoverColor" Value="{DynamicResource DarkerBackColor}" />

        <Setter Property="CornerRadius" Value="5" />

        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{Binding RelativeSource={RelativeSource Self}, Path=DisabledOpacity}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>